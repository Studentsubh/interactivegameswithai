<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            justify-content: center;
        }
        .cell {
            width: 100px;
            height: 100px;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            font-weight: bold;
            border: 2px solid #ccc;
            cursor: pointer;
        }
        .cell.taken {
            cursor: not-allowed;
        }
        .winner {
            margin-top: 20px;
            font-size: 24px;
            color: green;
        }
        .reset-btn {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div class="board" id="board"></div>
    <div class="winner" id="winner"></div>
    <button class="reset-btn" onclick="resetGame()">Reset Game</button>

    <script>
        const board = document.getElementById("board");
        const winnerDisplay = document.getElementById("winner");
        let currentPlayer = "X";
        let gameActive = true;
        let gameState = Array(9).fill("");

        const winningConditions = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function createBoard() {
            board.innerHTML = "";
            gameState.forEach((cell, index) => {
                const cellDiv = document.createElement("div");
                cellDiv.classList.add("cell");
                cellDiv.dataset.index = index;
                cellDiv.innerText = cell;
                cellDiv.addEventListener("click", handleCellClick);
                board.appendChild(cellDiv);
            });
        }

        function handleCellClick(e) {
            const index = e.target.dataset.index;
            if (gameState[index] !== "" || !gameActive) return;

            gameState[index] = currentPlayer;
            e.target.innerText = currentPlayer;
            e.target.classList.add("taken");

            if (checkWinner()) {
                winnerDisplay.innerText = `${currentPlayer} Wins!`;
                gameActive = false;
                return;
            }

            if (!gameState.includes("")) {
                winnerDisplay.innerText = "It's a Draw!";
                gameActive = false;
                return;
            }

            currentPlayer = currentPlayer === "X" ? "O" : "X";
        }

        function checkWinner() {
            return winningConditions.some(condition => {
                const [a, b, c] = condition;
                return gameState[a] !== "" &&
                       gameState[a] === gameState[b] &&
                       gameState[a] === gameState[c];
            });
        }

        function resetGame() {
            currentPlayer = "X";
            gameState = Array(9).fill("");
            gameActive = true;
            winnerDisplay.innerText = "";
            createBoard();
        }

        createBoard();
    </script>
</body>
</html>
